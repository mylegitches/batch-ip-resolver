name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run script with sample input
        run: |
          cp input.sample.txt input.txt
          python ip_resolver.py
          ls -la

      - name: Smoke test web UI
        run: |
          python - << 'PY'
          import threading, time, urllib.request
          import subprocess, sys
          
          # Start Flask app
          p = subprocess.Popen([sys.executable, 'app.py'])
          try:
              # Wait for server
              for _ in range(30):
                  try:
                      urllib.request.urlopen('http://127.0.0.1:5000', timeout=1)
                      break
                  except Exception:
                      time.sleep(1)
              else:
                  raise RuntimeError('Flask did not start in time')

              # Fetch index
              with urllib.request.urlopen('http://127.0.0.1:5000', timeout=3) as resp:
                  html = resp.read().decode('utf-8', 'ignore')
                  assert 'Batch IP Resolver' in html
          finally:
              p.terminate()
              p.wait(timeout=10)
          PY

      - name: Build Docker image
        run: |
          docker build -t batch-ip-resolver:ci .

      - name: Run Docker container and test
        run: |
          docker run -d -p 5000:5000 --name batch-ip-resolver-ci batch-ip-resolver:ci
          # wait for container
          for i in {1..30}; do
            if curl -sSf http://127.0.0.1:5000 >/dev/null; then
              break
            fi
            sleep 1
          done
          curl -sSf http://127.0.0.1:5000 | grep -q "Batch IP Resolver"
          docker logs batch-ip-resolver-ci || true
          docker rm -f batch-ip-resolver-ci

